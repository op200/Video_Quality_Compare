name: Build

on:
  push:
    paths:
      - 'VQC.py'
      - '.github/workflows/*'
    branches: [ "main" ]
  pull_request:
    paths:
      - 'VQC.py'
      - '.github/workflows/*'
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Cache nuitka output
      uses: actions/cache@v4
      with:
        path: vqc_nuitka_output
        # 使用一个基于文件内容的键来确保当src目录下的文件发生变化时，可以触发新的缓存
        key: ${{ runner.os }}-nuitka-output
        # 如果主键没有命中，尝试使用旧版本的键来恢复缓存
        restore-keys: |
          ${{ runner.os }}-nuitka-output

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
        cache: "pip"
    - run: pip install -U -r requirements.txt

    - name: Building the application
      run: |
        python -m nuitka --standalone --onefile --assume-yes-for-downloads --plugin-enable=tk-inter --output-dir=./vqc_nuitka_output VQC.py

    - name: Create 7z archive
      run: |
        7z a -t7z -m0=LZMA2 -mx=9 vqc.7z ./vqc_nuitka_output/*.exe

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: vqc_x64
        path: ./vqc.7z
